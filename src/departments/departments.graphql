# src/department/department.graphql

type Department {
  id: ID!
  name: String!
  subDepartments: [SubDepartment]
}

type SubDepartment {
  id: ID!
  name: String!
  department: Department!
}

input SubDepartmentInput {
  name: String!
}

input CreateDepartmentInput {
  name: String!
  subDepartments: [SubDepartmentInput]
}

input UpdateDepartmentInput {
  id: ID!
  name: String!
}

input CreateSubDepartmentInput {
  name: String!
  departmentId: ID!
}

input UpdateSubDepartmentInput {
  id: ID!
  name: String!
}

type Mutation {
  createDepartment(input: CreateDepartmentInput!): Department!
  updateDepartment(input: UpdateDepartmentInput!): Department!
  deleteDepartment(id: ID!): Boolean! # New mutation for deleting a department
  createSubDepartment(input: CreateSubDepartmentInput!): SubDepartment!
  updateSubDepartment(input: UpdateSubDepartmentInput!): SubDepartment!
  deleteSubDepartment(id: ID!): Boolean! # Mutation to delete a sub-department
}

type Query {
  subDepartment(id: ID!): SubDepartment
  subDepartments: [SubDepartment]
}
